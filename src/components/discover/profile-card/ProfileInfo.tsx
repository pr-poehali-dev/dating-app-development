import { User } from '@/contexts/AuthContext';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { cn } from '@/lib/utils';
import { useNavigate } from 'react-router-dom';

interface ProfileInfoProps {
  profile: User;
  variant: 'desktop' | 'tablet' | 'mobile';
  textSizes: { [key: string]: { title: string; subtitle: string; bio: string } };
  showSwipeHints: boolean;
}

const ProfileInfo = ({
  profile,
  variant,
  textSizes,
  showSwipeHints
}: ProfileInfoProps) => {
  const navigate = useNavigate();

  return (
    <div className={cn(
      "flex flex-col justify-between",
      variant === 'desktop' ? "h-1/4 p-6" : variant === 'tablet' ? "h-1/4 p-4" : "h-1/3 p-5"
    )}>
      <div>
        <div className="flex items-center justify-between mb-3">
          <div>
            <h3 className={cn(
              "font-bold flex items-center gap-2 text-gray-800",
              textSizes[variant].title
            )}>
              {profile.name}
              {profile.verified && (
                <Icon 
                  name="BadgeCheck" 
                  size={variant === 'desktop' ? 24 : variant === 'tablet' ? 20 : 22} 
                  className="text-blue-500" 
                />
              )}
            </h3>
            <p className={cn("text-gray-600", textSizes[variant].subtitle)}>
              {profile.age} –ª–µ—Ç ‚Ä¢ {profile.location.city}
            </p>
          </div>
          <div className={cn(
            "flex items-center gap-2 px-3 py-1 rounded-full text-sm",
            profile.settings?.showOnlineStatus 
              ? "bg-green-100 text-green-700" 
              : "bg-gray-100 text-gray-600",
            variant === 'tablet' && "px-2 py-1 text-xs gap-1"
          )}>
            <div className={cn(
              "w-2 h-2 rounded-full",
              profile.settings?.showOnlineStatus ? "bg-green-500 animate-pulse" : "bg-gray-400"
            )} />
            <span className="font-medium">
              {profile.settings?.showOnlineStatus ? '–û–Ω–ª–∞–π–Ω' : variant === 'tablet' ? '–ù–µ–¥–∞–≤–Ω–æ' : '–ù–µ–¥–∞–≤–Ω–æ'}
            </span>
          </div>
        </div>

        {/* –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="space-y-2 mb-3">
          <div className="grid grid-cols-1 gap-2">
            {profile.height && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Ruler" size={14} />
                <span className="text-sm">{profile.height} —Å–º</span>
                {profile.bodyType && (
                  <span className="text-sm">‚Ä¢ {
                    profile.bodyType === 'slim' ? '–°—Ç—Ä–æ–π–Ω–æ–µ' :
                    profile.bodyType === 'athletic' ? '–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ' :
                    profile.bodyType === 'average' ? '–°—Ä–µ–¥–Ω–µ–µ' :
                    profile.bodyType === 'curvy' ? '–ü—ã—à–Ω–æ–µ' : '–ö—Ä—É–ø–Ω–æ–µ'
                  }</span>
                )}
              </div>
            )}
            
            {profile.work && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Briefcase" size={14} />
                <span className="text-sm line-clamp-1">{profile.work}</span>
              </div>
            )}
            
            {profile.education && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="GraduationCap" size={14} />
                <span className="text-sm">
                  {profile.education === 'school' && '–°—Ä–µ–¥–Ω–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'}
                  {profile.education === 'college' && '–°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ'}
                  {profile.education === 'bachelor' && '–í—ã—Å—à–µ–µ (–±–∞–∫–∞–ª–∞–≤—Ä)'}
                  {profile.education === 'master' && '–í—ã—Å—à–µ–µ (–º–∞–≥–∏—Å—Ç—Ä)'}
                  {profile.education === 'phd' && '–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å'}
                </span>
              </div>
            )}

            {/* –°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –¥–µ—Ç–∏ */}
            {profile.relationship && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Heart" size={14} />
                <span className="text-sm">
                  {profile.relationship === 'single' && '–ù–µ –∂–µ–Ω–∞—Ç/–Ω–µ –∑–∞–º—É–∂–µ–º'}
                  {profile.relationship === 'divorced' && '–í —Ä–∞–∑–≤–æ–¥–µ'}
                  {profile.relationship === 'widowed' && '–í–¥–æ–≤–µ—Ü/–≤–¥–æ–≤–∞'}
                </span>
                {profile.children && (
                  <span className="text-sm">‚Ä¢ {
                    profile.children === 'none' ? '–ù–µ—Ç –¥–µ—Ç–µ–π' :
                    profile.children === 'have' ? '–ï—Å—Ç—å –¥–µ—Ç–∏' :
                    profile.children === 'want' ? '–•–æ—á—É –¥–µ—Ç–µ–π' : '–ù–µ —Ö–æ—á—É –¥–µ—Ç–µ–π'
                  }</span>
                )}
              </div>
            )}

            {/* –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ */}
            {(profile.smoking || profile.drinking) && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Coffee" size={14} />
                <div className="flex gap-3 text-sm">
                  {profile.smoking && (
                    <span>
                      {profile.smoking === 'never' && 'üö≠ –ù–µ –∫—É—Ä—é'}
                      {profile.smoking === 'sometimes' && 'üö¨ –ò–Ω–æ–≥–¥–∞'}
                      {profile.smoking === 'often' && 'üö¨ –ö—É—Ä—é'}
                      {profile.smoking === 'socially' && 'üö¨ –í –∫–æ–º–ø–∞–Ω–∏–∏'}
                    </span>
                  )}
                  {profile.drinking && (
                    <span>
                      {profile.drinking === 'never' && 'üö´ –ù–µ –ø—å—é'}
                      {profile.drinking === 'socially' && 'üç∑ –í –∫–æ–º–ø–∞–Ω–∏–∏'}
                      {profile.drinking === 'often' && 'üç∑ –†–µ–≥—É–ª—è—Ä–Ω–æ'}
                      {profile.drinking === 'rarely' && 'üç∑ –†–µ–¥–∫–æ'}
                    </span>
                  )}
                </div>
              </div>
            )}

            {/* –ß—Ç–æ –∏—â–µ—Ç */}
            {profile.lookingFor && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Search" size={14} />
                <span className="text-sm">
                  –ò—â—É: {profile.lookingFor === 'casual' && '–û–±—â–µ–Ω–∏–µ'}
                  {profile.lookingFor === 'serious' && '–°–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è'}
                  {profile.lookingFor === 'friendship' && '–î—Ä—É–∂–±—É'}
                  {profile.lookingFor === 'marriage' && '–ë—Ä–∞–∫'}
                  {profile.lookingFor === 'activity_partner' && '–ü–∞—Ä—Ç–Ω–µ—Ä–∞ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º'}
                </span>
              </div>
            )}

            {/* –ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ */}
            {profile.zodiac && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Star" size={14} />
                <span className="text-sm">
                  {profile.zodiac === 'aries' && '‚ôà –û–≤–µ–Ω'}
                  {profile.zodiac === 'taurus' && '‚ôâ –¢–µ–ª–µ—Ü'}
                  {profile.zodiac === 'gemini' && '‚ôä –ë–ª–∏–∑–Ω–µ—Ü—ã'}
                  {profile.zodiac === 'cancer' && '‚ôã –†–∞–∫'}
                  {profile.zodiac === 'leo' && '‚ôå –õ–µ–≤'}
                  {profile.zodiac === 'virgo' && '‚ôç –î–µ–≤–∞'}
                  {profile.zodiac === 'libra' && '‚ôé –í–µ—Å—ã'}
                  {profile.zodiac === 'scorpio' && '‚ôè –°–∫–æ—Ä–ø–∏–æ–Ω'}
                  {profile.zodiac === 'sagittarius' && '‚ôê –°—Ç—Ä–µ–ª–µ—Ü'}
                  {profile.zodiac === 'capricorn' && '‚ôë –ö–æ–∑–µ—Ä–æ–≥'}
                  {profile.zodiac === 'aquarius' && '‚ôí –í–æ–¥–æ–ª–µ–π'}
                  {profile.zodiac === 'pisces' && '‚ôì –†—ã–±—ã'}
                </span>
              </div>
            )}

            {/* –Ø–∑—ã–∫–∏ */}
            {profile.languages && profile.languages.length > 0 && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Globe" size={14} />
                <span className="text-sm">–Ø–∑—ã–∫–∏: {profile.languages.join(', ')}</span>
              </div>
            )}

            {/* –î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ */}
            {profile.pets && profile.pets !== 'none' && (
              <div className="flex items-center gap-2 text-gray-600">
                <Icon name="Heart" size={14} />
                <span className="text-sm">
                  {profile.pets === 'have_dogs' && 'üêï –ï—Å—Ç—å —Å–æ–±–∞–∫–∞'}
                  {profile.pets === 'have_cats' && 'üê± –ï—Å—Ç—å –∫–æ—à–∫–∞'}
                  {profile.pets === 'have_other' && 'üêæ –ï—Å—Ç—å –ø–∏—Ç–æ–º—Ü—ã'}
                  {profile.pets === 'love_all' && '‚ù§Ô∏è –õ—é–±–ª—é –∂–∏–≤–æ—Ç–Ω—ã—Ö'}
                </span>
              </div>
            )}
          </div>
        </div>

        <p className={cn(
          "text-gray-700 line-clamp-2 leading-relaxed mb-3",
          textSizes[variant].bio
        )}>
          {profile.bio}
        </p>

        <div className="flex flex-wrap gap-2">
          {profile.interests.slice(0, variant === 'tablet' ? 2 : 3).map((interest, index) => (
            <Badge 
              key={index} 
              variant="secondary" 
              className={cn(
                "bg-gradient-to-r from-pink-100 to-purple-100 text-purple-700 border-purple-200 px-2 py-1",
                variant === 'tablet' ? "text-xs" : "text-sm"
              )}
            >
              {interest}
            </Badge>
          ))}
          {profile.interests.length > (variant === 'tablet' ? 2 : 3) && (
            <Badge 
              variant="secondary" 
              className={cn(
                "bg-gradient-to-r from-pink-100 to-purple-100 text-purple-700 border-purple-200 px-2 py-1",
                variant === 'tablet' ? "text-xs" : "text-sm"
              )}
            >
              +{profile.interests.length - (variant === 'tablet' ? 2 : 3)}
            </Badge>
          )}
        </div>
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è —Å–≤–∞–π–ø–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */}
      {showSwipeHints && (
        <div className="text-center space-y-3">
          <Button
            size="sm"
            variant="outline"
            onClick={() => navigate(`/user/${profile.id}`)}
            className="w-full border-purple-200 hover:bg-purple-50 text-purple-600"
          >
            <Icon name="User" size={16} className="mr-2" />
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
          </Button>
          <div className="flex items-center justify-center gap-4 text-xs text-gray-400 bg-gray-50 rounded-full py-2 px-4">
            <div className="flex items-center gap-1">
              <Icon name="ArrowLeft" size={14} />
              <span>–ü—Ä–æ–ø—É—Å–∫</span>
            </div>
            <div className="flex items-center gap-1">
              <Icon name="ArrowUp" size={14} />
              <span>–°—É–ø–µ—Ä</span>
            </div>
            <div className="flex items-center gap-1">
              <Icon name="ArrowRight" size={14} />
              <span>–õ–∞–π–∫</span>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProfileInfo;